type Subscription {
  eventCreated: Event!
  eventUpdated: Event!
  eventDeleted: Event!
  eventCount: Int!
}
type Mutation {
  addEvent(data: AddEventInput!): Event!
  updateEvent(_id: ID!, data: UpdateEventInput!): Event!
  deleteEvent(_id: ID!): Event!
  deleteAllEvents: DeleteAllOutPut!
}
type Query {
  events: [Event!]!
  event(_id: ID!): Event!
}
type Event {
  _id: ID!
  title: String!
  desc: String!
  date: String!
  from: String!
  to: String!
  location_id: String!
  user_id: ID!
  user: User
  participants: [Participant!]!
  location: Location!
}

input AddEventInput {
  title: String!
  desc: String!
  location: String!
  date: String!
  user: ID!
}

input UpdateEventInput {
  title: String
  desc: String
  date: String
  from: String
  to: String
  location_id: String
  user_id: ID
}
